-- https://wiki.haskell.org/GHC/GHCi#Fancy_Prompts

:set prompt "Î»: "
-- :set prompt "\ESC[34m\STX%s > \ESC[m\STX"

:set +t
:def clear \_ -> return $ ":!clear"


-- -- Colourise ghci output (use :nopretty to disable)
-- -- Required libraries: pretty-show hscolour
-- :set -package pretty-show -package hscolour
-- import qualified Language.Haskell.HsColour as HSC
-- import qualified Language.Haskell.HsColour.Colourise as HSC
-- :{
-- dotGHCI_myPrint :: (Show a) => a -> IO ()
-- dotGHCI_myPrint a = putStrLn $ HSC.hscolour HSC.TTY myColourPrefs False False "" False $ Text.Show.Pretty.ppShow a
--   where
--     myColourPrefs = HSC.defaultColourPrefs -- { HSC.conop    = [HSC.Foreground HSC.Yellow]
--                                            -- , HSC.conid    = [HSC.Foreground HSC.Yellow, HSC.Bold]
--                                            -- , HSC.string   = [HSC.Foreground $ HSC.Rgb 29 193 57]
--                                            -- , HSC.char     = [HSC.Foreground HSC.Cyan]
--                                            -- , HSC.number   = [HSC.Foreground $ HSC.Rgb 202 170 236]
--                                            -- , HSC.keyglyph = [HSC.Foreground HSC.Yellow]
--                                            -- }
-- :}
-- :seti -interactive-print dotGHCI_myPrint
-- :def! pretty \_ -> return ":set -interactive-print dotGHCI_myPrint"
-- :def! nopretty \_ -> return ":set -interactive-print System.IO.print"
-- :m -Language.Haskell.HsColour
-- :m -Language.Haskell.HsColour.Colourise

