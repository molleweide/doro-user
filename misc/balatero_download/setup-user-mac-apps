#!/usr/bin/env bash

source "${BASH_SOURCE%/*}/../lib/_"

if is_macos; then
    if dotfiles_config_set "no-mac-apps"; then
        echo-style "@b@blue[[Skipping Mac app store, no-mac-apps set]]"
    else
        require_installer package-manager

        install_1password() {
            local url="https://app-updates.agilebits.com/download/OPM7"
            install_pkg "1Password 7" "$url"
        }

        install_alfred() {
            local url="https://cachefly.alfredapp.com/Alfred_3.8.4_968.dmg"
            install_simple_dmg_copy "Alfred 3" "$url"
        }

        install_bartender() {
            local url="https://www.macbartender.com/Demo/Bartender%203.zip"
            install_simple_zip "Bartender 3" "$url"
        }

        install_better_touch_tool() {
            local url="https://www.boastr.net/releases/BetterTouchTool.zip"
            install_simple_zip "BetterTouchTool" "$url"
        }

        install_dash() {
            local url="https://sanfrancisco.kapeli.com/downloads/v4/Dash.zip"
            install_simple_zip "Dash" "$url"
        }

        install_dropbox() {
            local url="https://www.dropbox.com/download?plat=mac"
            install_dmg_with_installer "Dropbox" "$url" "Dropbox.app"
        }

        # install_firefox() {
        #   local url="https://download.mozilla.org/?product=firefox-latest-ssl&os=osx&lang=en-US"
        #   install_simple_dmg_copy "Firefox" "$url"
        # }

        install_focus() {
            local url="https://heyfocus.com/releases/Focus-latest.zip"
            install_simple_zip "Focus" "$url"
        }

        install_google_chrome() {
            local url="https://dl.google.com/chrome/mac/stable/GGRO/googlechrome.dmg"
            install_simple_dmg_copy "Google Chrome" "$url"
        }

        install_licecap() {
            local url="https://www.cockos.com/licecap/licecap125.dmg"
            install_simple_dmg_copy "LICEcap" "$url"
        }

        # install_limelight() {
        #   # TODO https://github.com/koekeishiya/limelight
        # }

        install_lunar() {
            local url="https://lunar.fyi/download/latest"
            install_simple_dmg_copy Lunar "$url"
        }

        install_on_the_job() {
            local url="http://stuntsoftware.com/downloads/OnTheJob.zip"
            install_simple_zip "On The Job" "$url"
        }

        setup_on_the_job_dropbox_sync() {
            local synced_dir="$HOME/Dropbox/On The Job 3"
            local support_dir="$HOME/Library/Application Support/On The Job 3"

            if [ ! -d $HOME/Dropbox ]; then
                echo-style "@b@red[[ERROR Dropbox needs to be setup to finish configuring On The Job]]"
                return 1
            fi

            if [ ! -d "$synced_dir" ]; then
                echo-style "@b@red[[ERROR the OTJ Dropbox dir needs to be synced to finish configuring On The Job]]"
                return 1
            fi

            if [[ ! -L "$support_dir" ]]; then
                echo-style "@b@blue[[Synced On the Job with Dropbox]]"
                ln -sf "$synced_dir" "$support_dir"
            fi
        }

        install_openemu() {
            local url="https://github.com/OpenEmu/OpenEmu/releases/download/v2.0.5/OpenEmu_2.0.5.zip"
            install_simple_zip "OpenEmu" "$url"
        }

        install_signal() {
            local url="https://updates.signal.org/desktop/signal-desktop-mac-1.27.4.dmg"
            install_simple_dmg_copy "Signal" "$url"
        }

        install_splice() {
            local url="https://s3-us-west-1.amazonaws.com/splicedesktop/install/stable/Splice.dmg"
            install_dmg_with_installer "Splice" "$url" "Splice Installer.app"
        }

        install_spotify() {
            local url="https://download.scdn.co/SpotifyInstaller.zip"

            install_zip_installer "Spotify" "Install Spotify.app" "$url"
        }

        install_steam() {
            local url="https://steamcdn-a.akamaihd.net/client/installer/steam.dmg"
            install_simple_dmg_copy "Steam" "$url"
        }

        install_swinsian() {
            local url="https://swinsian.com/sparkle/Swinsian.zip"
            install_simple_zip "Swinsian" "$url"
        }

        # install_vimac() {
        #   # TODO
        # }

        install_vlc() {
            local url="https://mirrors.syringanetworks.net/videolan/vlc/3.0.8/macosx/vlc-3.0.8.dmg"
            install_simple_dmg_copy "VLC" "$url"
        }

        install_zooom2() {
            local name="Zooom2"
            local path="$HOME/Dropbox/Mac Software/Zooom2.app"

            if ! app_installed "$name"; then
                if [ ! -e "$path" ]; then
                    echo-style "@b@red[[ERROR installing $name at $path - mount and sync Dropbox and try again]]"
                else
                    cp -r "$path" /Applications
                fi
            else
                already_installed_msg "$name"
            fi
        }

        install_aerial_screensavers() {
            brew_cask_install aerial
        }

        install_docker() {
            brew install --cask docker
        }

        install_hazeover() {
            local url="https://hazeover.com/HazeOver.dmg"
            install_simple_dmg_copy "HazeOver" "$url"
        }

        dotheader "SETTING UP CUSTOM MAC APPS..."

        # install_1password
        # install_aerial_screensavers
        # install_alfred
        # install_bartender
        # install_better_touch_tool
        # install_dash
        # install_docker
        # install_dropbox
        # install_firefox
        # install_focus
        # install_google_chrome
        # install_hazeover
        install_licecap
        # install_limelight
        # install_on_the_job
        # setup_on_the_job_dropbox_sync
        # install_openemu
        # install_reaper #????
        install_signal
        # install_splice
        # install_spotify
        # install_steam
        # install_swinsian
        # install_vimac
        install_vlc
        # install_zooom2

        #     "flux",
        #     "bitwarden",
        #     "onionshare",
        #     "seafile-client",
        #     "slack",
        #     "spotify",
        #     "soundflower",
        #     "syncthing",
        #     "teensy",
        #     "telegram",
        #     //'torbrowser',
        #     //'vimac',
        #     //"visual-studio-code",
        #     //'vlc',
        #     //"xquartz",
    fi
fi
