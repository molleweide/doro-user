#!/usr/bin/env bash

# M1 support -> https://github.com/koekeishiya/yabai/issues/725
# https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)
# https://github.com/koekeishiya/yabai/wiki/Disabling-System-Integrity-Protection

# ::: NOTE: SIP DISABLE REQUIREMENTS :::
# SILICON | macOS 12.x.x           ->   `csrutil disable --with kext --with dtrace --with basesystem`               # Filesystem Protections, Debugging Restrictions and NVRAM Protection. (** printed warning can be safely ignored)
# INTEL   | macOS 12.x.x / 11.x.x  ->   `csrutil disable --with kext --with dtrace --with nvram --with basesystem`  # Filesystem Protections and Debugging Restrictions (workaround because --without debug does not work). (**)
# INTEL   | macOS 10.14 / 10.15    ->   `csrutil enable --without debug --without fs`                               # Filesystem Protections and Debugging Restrictions. (**)
# INTEL   | macOS 10.13            ->   `csrutil disable`                                                           # (disables SIP completely)

# ::: NOTE: LOAD _SCRIPTING_ADDITION_ :::
# THIS IS NECESSARY FOR FULL FEATURES
# sudo yabai --install-sa && yabai --load-sa
# BIG SUR REQUIRES MANUAL LOADING OF `SA`
# # replace <user> with your username (output of: whoami).
# sudo visudo -f /private/etc/sudoers.d/yabai <<< `<user> ALL = (root) NOPASSWD: /usr/local/bin/yabai --load-sa`
# ::: NOTE: UPDATING YABAI :::
# brew services stop yabai
# brew upgrade yabai
# sudo yabai --uninstall-sa
# sudo yabai --install-sa
# brew services start yabai

# ::: QUESTIONS :::::::

# ::: HELPERS :::::::::::::::::::::::::::::::::

jq_w_filter_keys(){ wmq w | jq "map(.\"$1\")"; }

jq_w_sel_by_app(){ wmq w | jq "map(select(.\"app\" == \"$1\"))"; }

jq_w_ids_by_app_name(){  wmq w | jq "map(select(.\"app\" == \"$1\").id)" | tr -d '[],"'; }

# aidtr=($(echo $aid | tr -d '[],"'))

# jq_w_sel_by_key(){ wmq w | jq "map(select(.\"app\" == \"$1\")).$2"; }

# wmw t float && /tmp/yabai-restore/$(wmq w w | jq -re '.id').restore 2>/dev/null || true

# index="$(yabai -m query --spaces --display | jq 'map(select(."is-native-fullscreen" == false))[-1].index')" && \

# toggle active window
# wmq s s | jq -r 'if .type == "bsp" then "float" else "bsp" end')

# ::: WINDOW FUNCTIONS :::::::::::::::::::::::::::::::::

# gap functions

gap_set() { wms p abs:$1:$1:$1:$1 && wms g abs:$1; }

gap_resize() { wms p rel:$1:$1:$1:$1 && wms g rel:$1; } # +/- integer

toggle_gap() { wms t padding && wms t gap; }
# test "${1-}" = "gt" && toggle_gap

case "$1" in
    "gs") gap_set $2;;
    "gr") gap_resize $2;;
esac

space_kill() { wms f prev; wms --destroy recent; }

move_win_to_monitor() { wmw d $1; wmd $1; } # <DISPLAY_SEL>

move_win_to_space() { wmw s $1; wms f $1; } # <SPACE_SEL>

# create desktop, move window and follow focus
create_desktop() {
    wms c
    id=$(wmq d d | grep "spaces")
    wmw s $(echo ${id:10:${#id}-10})
    wms f $(echo ${id:10:${#id}-10})
}


# wmq w | jq 'map(select(."is-native-fullscreen" == false))[-1].index'

# # create desktop, move window and follow focus - uses jq for parsing json (brew install jq)
# shift + cmd - n : yabai -m space --create && \
# index="$(yabai -m query --spaces --display | jq 'map(select(."is-native-fullscreen" == false))[-1].index')" && \
#                   yabai -m window --space "${index}" && \
#                   yabai -m space --focus "${index}" && \
#                   spacebar -m config spaces on

# # create desktop and follow focus - uses jq for parsing json (brew install jq)
# cmd + alt - n : yabai -m space --create && \
#                 index="$(yabai -m query --spaces --display | jq 'map(select(."is-native-fullscreen" == false))[-1].index')" && \
#                 yabai -m space --focus "${index}"

toggle_float_center() { wmw t float && wmw g 4:4:1:1:2:2; }

toggle_float_restore() {
    wmw t float && /tmp/yabai-restore/$(wmq w w | jq -re '.id').restore 2>/dev/null || true
    wmw t float && wmw g 4:4:1:1:2:2
}

toggle_layout_float() {
    # # change layout of desktop | nice toggle function
    # ctrl + alt - a : yabai -m space --layout bsp
    # ctrl + alt - d : yabai -m space --layout float
    wms y $(wmq s s | jq -r 'if .type == "bsp" then "float" else "bsp" end')
}

toggle_pict_in_pict() { wmw t border && wmw t pip; }

toggle_sticky_float_pic_in_pic() { wmw t sticky; wmw g 5:5:4:0:1:1; }

fill_screen() { wmw g 1:1:0:0:1:1; }

fill_3_by_3() {
    echo "> $@"
    case "$1" in
        "r1") wmw g "3:3:$2:$3:2:1";;
        "c1") wmw g "3:3:$2:$3:1:2";;
        *) echo "NO_MATCH";;
    esac
}

apply_grid() {
    case "$1" in

        "cf") wmc y float; wmw g 1:1:0:0:1:1 $2;;
        "cb") wmw g 8:8:1:1:6:6 $2;;
        "cm") wmw g 4:4:1:1:2:2 $2;;
        "cs") wmw g 3:3:1:1:1:1 $2;;
        "cw") wmw g 8:8:1:2:6:4 $2;;
        "cww") wmw g 8:8:1:3:6:2 $2;;

        "l") wmw g 1:2:0:0:1:1 $2;;
        "u") wmw g 2:1:0:0:1:1 $2;;
        "d") wmw g 2:1:1:1:1:1 $2;;
        "r") wmw g 1:2:1:0:1:1 $2;;
        "ul") wmw g 2:2:0:0:1:1 $2;;
        "ur") wmw g 2:2:1:0:1:1 $2;;
        "dl") wmw g 2:2:0:1:1:1 $2;;
        "dr") wmw g 2:2:1:1:1:1 $2;;

        "23a") wmw g 2:3:0:0:1:1;;
        "23b") wmw g 2:3:1:0:1:1;;
        "23c") wmw g 2:3:2:0:1:1;;
        "23d") wmw g 2:3:0:1:1:1;;
        "23e") wmw g 2:3:1:1:1:1;;
        "23f") wmw g 2:3:2:1:1:1;;

        "23ul") wmw g 2:3:0:0:2:1;;
        "23ur") wmw g 2:3:1:0:2:1;;
        "23dl") wmw g 2:3:0:1:2:1;;
        "23dr") wmw g 2:3:1:1:2:1;;

        "33cl") wmw g 1:3:0:0:1:1;;
        "33cl2") wmw g 1:3:0:0:2:1;; # two wide
        "33cm") wmw g 1:3:1:0:1:1;;
        "33cr") wmw g 1:3:2:0:1:1;;
        "33cr2") wmw g 1:3:1:0:2:1;; # two wide

        "33ul") wmw g 3:3:0:0:2:2;;
        "33ur") wmw g 3:3:1:0:2:2;;
        "33dl") wmw g 3:3:0:1:2:2;;
        "33dr") wmw g 3:3:1:1:2:2;;

        # "r1") wmw g "3:3:$2:$3:2:1";;
        # "c1") wmw g "3:3:$2:$3:1:2";;

        *) # custom setting
            r=$(echo "$1" | cut -c 1)
            c=$(echo "$1" | cut -c 2)
            x=$(echo "$1" | cut -c 3)
            y=$(echo "$1" | cut -c 4)
            w=$(echo "$1" | cut -c 5)
            h=$(echo "$1" | cut -c 6)
            echo "wmw g $r:$c:$x:$y:$w:$h $2"
            wmw g $r:$c:$x:$y:$w:$h $2
            ;;
    esac

}

get_key() {
    # echo "!"
    jq_w_filter_keys $1
}

# here string is broken at whitespace.
focus_app_name() {
    name="$@" # prevent input string to bli split by whitespace defalt
    aid=($(jq_w_ids_by_app_name "$name"))
    wmw f "${aid[0]}"
}

# WHY THIS DOESN'T WORK??
test_setup_terminal() {
    aid=($(jq_w_ids_by_app_name "$1"))
    echo "${#aid[@]}"
    for i in ${!aid[@]}; do
        # echo "$c > $i"
        echo "aid $i = ${aid[i]}"

        # apply_grid 332023 1672

        case $i in
            "0" )  apply_grid 330013 "${aid[i]}";;
            "1" )  apply_grid 332023 "${aid[i]}";;
            *) echo "* $i";;
        esac

    done
    # 2 add new terminals
    # /Applications/Kitty.app/Contents/MacOS/kitty --single-instance -d ~
}

############################################################

case "$1" in
    "jqwsa") jq_w_sel_by_app $2;;
    "tt") test_setup_terminal $2;;
    "fan") focus_app_name $2;;
    "h") fill_half $2;; # l u d r
    "a") fill_screen;;
    "gk") get_key $2;;
    # "b") win_set_grid_22 $2 $3 $4 $5;;
    # "c")  win_set_grid_33 $2 $3 $4 $5;;
    "g")  apply_grid $2 $3;;
    "23") fill_2_by_3 $2;; # l u d r
    "33") fill_3_by_3 $2 $3 $4;;
    "tfc") toggle_float_center;;
    "tfr") toggle_float_restore;;
    "tfl") toggle_layout_float;;
    "tpip") toggle_pict_in_pict;;
    "tsfpip") toggle_sticky_float_pic_in_pic;;
    *) fill_screen;;
esac

############################################################


# # destroy desktop
# #cmd + alt - w : yabai -m space --destroy

# # fast focus desktop
# fn - x : yabai -m space --focus recent
# fn - z : yabai -m space --focus prev
# fn - c : yabai -m space --focus next
# fn - 1 : osascript -e 'tell application "System Events" to key code 18 using control down'
# fn - 2 : osascript -e 'tell application "System Events" to key code 19 using control down'
# fn - 3 : osascript -e 'tell application "System Events" to key code 20 using control down'
# fn - 4 : osascript -e 'tell application "System Events" to key code 21 using control down'
# fn - 5 : osascript -e 'tell application "System Events" to key code 22 using control down'
# fn - 6 : osascript -e 'tell application "System Events" to key code 23 using control down'
# fn - 7 : osascript -e 'tell application "System Events" to key code 24 using control down'
# fn - 8 : osascript -e 'tell application "System Events" to key code 25 using control down'
# fn - 9 : osascript -e 'tell application "System Events" to key code 26 using control down'
# fn - 0 : yabai -m space --focus 10

# # focus monitor
# # fn - x  : yabai -m display --focus recent
# # fn - z  : yabai -m display --focus prev
# # fn - c  : yabai -m display --focus next
# # fn - 1  : yabai -m display --focus 1
# # fn - 2  : yabai -m display --focus 2
# # fn - 3  : yabai -m display --focus 3

# # move window
# fn + ctrl - a : yabai -m window --move rel:-20:0
# fn + ctrl - s : yabai -m window --move rel:0:20
# fn + ctrl - w : yabai -m window --move rel:0:-20
# fn + ctrl - d : yabai -m window --move rel:20:0

# # increase window size
# fn + alt - a : yabai -m window --resize left:-20:0
# fn + alt - s : yabai -m window --resize bottom:0:20
# fn + alt - w : yabai -m window --resize top:0:-20
# fn + alt - d : yabai -m window --resize right:20:0

# # decrease window size
# fn + cmd - a : yabai -m window --resize left:20:0
# fn + cmd - s : yabai -m window --resize bottom:0:-20
# fn + cmd - w : yabai -m window --resize top:0:20
# fn + cmd - d : yabai -m window --resize right:-20:0

# # set insertion point in focused container
# ctrl + alt - h : yabai -m window --insert west
# ctrl + alt - j : yabai -m window --insert south
# ctrl + alt - k : yabai -m window --insert north
# ctrl + alt - l : yabai -m window --insert east

# alt - r : yabai -m space --rotate 90
# alt - y : yabai -m space --mirror y-axis
# alt - x : yabai -m space --mirror x-axis

# # toggle window parent zoom
# fn - d : yabai -m window --toggle zoom-parent

# # toggle window fullscreen zoom
# fn - f : yabai -m window --toggle zoom-fullscreen

# # toggle window native fullscreen
# shift + alt - f : yabai -m window --toggle native-fullscreen

# # toggle window border
# shift + alt - b : yabai -m window --toggle border

# # toggle window split type
# fn - e : yabai -m window --toggle split

# # toggle sticky
# fn - s : yabai -m window --toggle sticky

# # change layout of desktop
# ctrl + alt - a : yabai -m space --layout bsp
# ctrl + alt - d : yabai -m space --layout float


# # ???????????????????????????????????
# # launcher shortcuts
# fn - e: open ~


# ============================================================

# # iTerm
# #cmd - return: open -a /Applications/iTerm.app
# #cmd + shift - return: open -a /Applications/Brave\ Browser.app

# # yabai

# ## Balance size of windows
# ctrl + shift - b: yabai -m space --balance

# ## Rotate window tree 90 degrees clockwise
# ctrl + shift - r: yabai -m space --rotate 270

# ## Enter fullscreen
# ctrl + shift - return: yabai -m window --toggle native-fullscreen

# ## Float focused window
# ctrl + shift - f: yabai -m window --toggle float

# ## Focus windows
# ctrl - left : yabai -m window --focus west
# ctrl - down : yabai -m window --focus south
# ctrl - up : yabai -m window --focus north
# ctrl - right : yabai -m window --focus east

# ## Create space (requires SIP disabled)
# ctrl - w: yabai -m space --create

# ## Create space, moved focused app, and focus space (requires SIP disabled) - uses jq for parsing json (brew install jq)
# ctrl + shift - w : yabai -m space --create && \
#   index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
#   yabai -m window --space "${index}" && \
#   yabai -m space --focus "${index}"

# ## Switch space (requires SIP disabled)
# ctrl - d: yabai -m space --focus next || yabai -m space --focus first
# ctrl - a: yabai -m space --focus prev || yabai -m space --focus last
# ctrl - 1: yabai -m space --focus  1 || skhd -k "ctrl + alt + cmd - 1"
# ctrl - 2: yabai -m space --focus  2 || skhd -k "ctrl + alt + cmd - 2"
# ctrl - 3: yabai -m space --focus  3 || skhd -k "ctrl + alt + cmd - 3"
# ctrl - 4: yabai -m space --focus  4 || skhd -k "ctrl + alt + cmd - 4"
# ctrl - 5: yabai -m space --focus  5 || skhd -k "ctrl + alt + cmd - 5"
# ctrl - 6: yabai -m space --focus  6 || skhd -k "ctrl + alt + cmd - 6"
# ctrl - 7: yabai -m space --focus  7 || skhd -k "ctrl + alt + cmd - 7"
# ctrl - 8: yabai -m space --focus  8 || skhd -k "ctrl + alt + cmd - 8"
# ctrl - 9: yabai -m space --focus  9 || skhd -k "ctrl + alt + cmd - 9"
# ctrl - 0: yabai -m space --focus 10 || skhd -k "ctrl + alt + cmd - 0"

# ## Send window to desktop and follow focus (requires SIP disabled)
# #ctrl + shift - x : yabai -m window --space recent && yabai -m space --focus recent
# ctrl + shift - d : yabai -m window --space next && yabai -m space --focus next
# ctrl + shift - a : yabai -m window --space prev && yabai -m space --focus prev
# ctrl + shift - 1 : yabai -m window --space  1 && yabai -m space --focus 1
# ctrl + shift - 2 : yabai -m window --space  2 && yabai -m space --focus 2
# ctrl + shift - 3 : yabai -m window --space  3 && yabai -m space --focus 3
# ctrl + shift - 4 : yabai -m window --space  4 && yabai -m space --focus 4
# ctrl + shift - 5 : yabai -m window --space  5 && yabai -m space --focus 5
# ctrl + shift - 6 : yabai -m window --space  6 && yabai -m space --focus 6
# ctrl + shift - 7 : yabai -m window --space  7 && yabai -m space --focus 7
# ctrl + shift - 8 : yabai -m window --space  8 && yabai -m space --focus 8
# ctrl + shift - 9 : yabai -m window --space  9 && yabai -m space --focus 9
# ctrl + shift - 0 : yabai -m window --space 10 && yabai -m space --focus 10

# ========

# # fast focus desktop
# cmd - escape : yabai -m space --focus recent
# ctrl + cmd - left : yabai -m space --focus prev
# ctrl + cmd - right : yabai -m space --focus next
# ctrl + cmd - 1 : yabai -m space --focus 1
# ctrl + cmd - 2 : yabai -m space --focus 2
# ctrl + cmd - 3 : yabai -m space --focus 3
# ctrl + cmd - 4 : yabai -m space --focus 4
# ctrl + cmd - 5 : yabai -m space --focus 5

# # focus monitor
# # TODO: test
# # cmd + f1  : yabai -m display --focus 1


# # toggle window split type (horizontal/vertical)
# # TODO: is there a way to straight up disable horizontal split?
# # yabai -m window --toggle split

# # open apps
# # alt - t : open -a Terminal -n
# # alt + shift - return : open -a Finder -n
# # alt - o : subl -n # TODO: need to fix (has a default 'stdin' tab when launched through skhd)

# ============================================================


# #!/usr/bin/env sh

# #
# #   /$$$$$$  /$$       /$$             /$$
# #  /$$__  $$| $$      | $$            | $$
# # | $$  \__/| $$   /$$| $$$$$$$   /$$$$$$$
# # |  $$$$$$ | $$  /$$/| $$__  $$ /$$__  $$
# #  \____  $$| $$$$$$/ | $$  \ $$| $$  | $$
# #  /$$  \ $$| $$_  $$ | $$  | $$| $$  | $$
# # |  $$$$$$/| $$ \  $$| $$  | $$|  $$$$$$$
# #  \______/ |__/  \__/|__/  |__/ \_______/

# ######################################################################################
# # applications
# ######################################################################################
# cmd - 0x2A                  : open -a  'Finder'                 # launch files
# cmd + alt - 0x2A            : open -na 'Intellij IDEA'          # launch ide
# cmd + alt +ctrl - 0x2A      : open -na 'DBVisualizer'
# #                           : open -na 'VSCodium.app' --args --extensions-dir $HOME/.vscode-oss/extensions
# cmd - return                : open -na 'alacritty'              # launch terminal
# cmd + alt - return          : open -na 'firefox'                # launch browser
# cmd + alt + ctrl  - return  : open -na 'vivaldi'                # launch browser2


# ######################################################################################
# # yabai window manager
# ######################################################################################
# cmd + alt - 0               : yabai -m window --space 0 && yabai -m space --focus 0;    # window: move to given space 0 with focus
# cmd + alt - 0x18            : yabai -m window --ratio rel:0.01                          # window: increase and decrease relative window ratios by 1% (plus)
# cmd + alt - 0x1B            : yabai -m window --ratio rel:-0.01                         # window: increase and decrease relative window ratios by 1% (minus)
# cmd + alt - 1               : yabai -m window --space 1 && yabai -m space --focus 1;    # window: move to given space 1 with focus
# cmd + alt - 2               : yabai -m window --space 2 && yabai -m space --focus 2;    # window: move to given space 2 with focus
# cmd + alt - 3               : yabai -m window --space 3 && yabai -m space --focus 3;    # window: move to given space 3 with focus
# cmd + alt - 4               : yabai -m window --space 4 && yabai -m space --focus 4;    # window: move to given space 4 with focus
# cmd + alt - 5               : yabai -m window --space 5 && yabai -m space --focus 5;    # window: move to given space 5 with focus
# cmd + alt - 6               : yabai -m window --space 6 && yabai -m space --focus 6;    # window: move to given space 6 with focus
# cmd + alt - 7               : yabai -m window --space 7 && yabai -m space --focus 7;    # window: move to given space 7 with focus
# cmd + alt - 8               : yabai -m window --space 8 && yabai -m space --focus 8;    # window: move to given space 8 with focus
# cmd + alt - 9               : yabai -m window --space 9 && yabai -m space --focus 9;    # window: move to given space 9 with focus
# cmd + alt - b               : yabai -m config layout bsp                                # spaces: Set the layout of the selected space to bsp
# cmd + alt - c               : yabai -m window --toggle float && yabai -m window --grid 4:4:1:1:2:2;     # window: center on screen - toggle
# cmd + alt - f               : yabai -m window --toggle zoom-fullscreen                  # window: full screen - toggle
# cmd + alt - h               : yabai -m window --focus west                              # window: move window focus left.
# cmd + alt - j               : yabai -m window --focus south                             # window: move window focus down.
# cmd + alt - k               : yabai -m window --focus north                             # window: move window focus up.
# cmd + alt - l               : yabai -m window --focus east                              # window: move window focus right.
# cmd + alt - r               : brew services stop yabai && brew services start yabai && skhd -r          # restart all
# cmd + alt - s               : yabai -m config layout stack                              # spaces: Set the layout of the selected space to stacking
# cmd + alt - x               : yabai -m space --balance                                  # window ratios: Adjust the split ratios of the selected space so that all windows occupy the same area.

# cmd + alt + ctrl - h        : yabai -m window --warp west                               # window: reinsert window by splitting window to the left.
# cmd + alt + ctrl - j        : yabai -m window --warp south                              # window: reinsert window by splitting window below.
# cmd + alt + ctrl - k        : yabai -m window --warp north                              # window: reinsert window by splitting window above.
# cmd + alt + ctrl - l        : yabai -m window --warp east                               # window: reinsert window by splitting window to the right.
# cmd + alt + ctrl - r        : skhd -r                                                   # reload key bindings

# cmd + shift - h             : yabai -m window --swap west                               # window: swap window left.
# cmd + shift - j             : yabai -m window --swap south                              # window: swap window down.
# cmd + shift - k             : yabai -m window --swap norths                             # window: swap window up.
# cmd + shift - l             : yabai -m window --swap east                               # window: swap window right.

# # keycode and key reference
# #   https://github.com/koekeishiya/skhd/issues/1
# #   backslash   = 0x2A
# #   minus       = 0x1B
# #   plus        = 0x18


# ######################################################################################
# # amethyst window manager
# ######################################################################################
# # cmd + alt - minus           : Shrink Main Pane
# # cmd + alt - plus            : Expand Main Pane
# # cmd + alt - j               : Move Focus Counter Clockwise
# # cmd + alt - k               : Move Focus Clockwise
# # cmd + alt - h               : Move Focus to Main window
# # cmd + alt + ctrl - j        : Swap Focused Window Counter Clockwise
# # cmd + alt + ctrl - k        : Swap Focused Window Clockwise
# # cmd + alt + ctrl - h        : Swap Focused Window to Main window
# # cmd + alt - x               : Force windows to be reevaluated
# # cmd + alt - 1               : Swap focused windows to space 1
# # cmd + alt - 2               : Swap focused windows to space 2
# # cmd + alt - 3               : Swap focused windows to space 3
# # cmd + alt - 4               : Swap focused windows to space 4
# # cmd + alt - 5               : Swap focused windows to space 5
# # cmd + alt - 6               : Swap focused windows to space 6
# # cmd + alt - 7               : Swap focused windows to space 7
# # cmd + alt - 8               : Swap focused windows to space 8
# # cmd + alt - 9               : Swap focused windows to space 9
# # cmd + alt - 0               : Swap focused windows to space 0
# # cmd + alt + ctrl - t        : Select Tall Right Layout
# # cmd + alt - t               : Select Tall Layout
# # cmd + alt - w               : Select Wide Layout
# # cmd + alt - c               : Select 3Column Middle Layout
# # cmd + shift - r             : Relaunch Amethyst

# ============================================================


# # open terminal
# cmd - return : /Applications/Kitty.app/Contents/MacOS/kitty --single-instance -d ~ &> /dev/null

# # focus window
# # ctrl - x : yabai -m window --focus recent
# ctrl - h : yabai -m window --focus west
# ctrl - j : yabai -m window --focus south
# ctrl - k : yabai -m window --focus north
# ctrl - l : yabai -m window --focus east
# # ctrl - z : yabai -m window --focus stack.prev
# # ctrl - c : yabai -m window --focus stack.next

# # swap window
# shift + ctrl - x : yabai -m window --swap recent
# shift + ctrl - h : yabai -m window --swap west
# shift + ctrl - j : yabai -m window --swap south
# shift + ctrl - k : yabai -m window --swap north
# shift + ctrl - l : yabai -m window --swap east

# # move window
# shift + cmd - h : yabai -m window --warp west
# shift + cmd - j : yabai -m window --warp south
# shift + cmd - k : yabai -m window --warp north
# shift + cmd - l : yabai -m window --warp east

# # balance size of windows
# # shift + alt - 0 : yabai -m space --balance

# # # make floating window fill screen
# # shift + alt - up     : yabai -m window --grid 1:1:0:0:1:1

# # # make floating window fill left-half of screen
# # shift + alt - left   : yabai -m window --grid 1:2:0:0:1:1

# # # make floating window fill right-half of screen
# # shift + alt - right  : yabai -m window --grid 1:2:1:0:1:1

# # create desktop, move window and follow focus - uses jq for parsing json (brew install jq)
# shift + cmd - n : yabai -m space --create && \
#                   index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
#                   yabai -m window --space "${index}" && \
#                   yabai -m space --focus "${index}"

# # create desktop and follow focus - uses jq for parsing json (brew install jq)
# cmd + ctrl - n : yabai -m space --create && \
#                 index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
#                 yabai -m space --focus "${index}"

# # destroy desktop
# cmd + ctrl - w : yabai -m space --destroy

# # fast focus desktop
# # cmd + ctrl - x : yabai -m space --focus recent
# # cmd + ctrl - z : yabai -m space --focus prev || skhd -k "ctrl + alt + cmd - z"
# # cmd + ctrl - c : yabai -m space --focus next || skhd -k "ctrl + alt + cmd - c"
# # cmd + ctrl - 1 : yabai -m space --focus  1 || skhd -k "ctrl + alt + cmd - 1"
# # cmd + ctrl - 2 : yabai -m space --focus  2 || skhd -k "ctrl + alt + cmd - 2"
# # cmd + ctrl - 3 : yabai -m space --focus  3 || skhd -k "ctrl + alt + cmd - 3"
# # cmd + ctrl - 4 : yabai -m space --focus  4 || skhd -k "ctrl + alt + cmd - 4"
# # cmd + ctrl - 5 : yabai -m space --focus  5 || skhd -k "ctrl + alt + cmd - 5"
# # cmd + ctrl - 6 : yabai -m space --focus  6 || skhd -k "ctrl + alt + cmd - 6"
# # cmd + ctrl - 7 : yabai -m space --focus  7 || skhd -k "ctrl + alt + cmd - 7"
# # cmd + ctrl - 8 : yabai -m space --focus  8 || skhd -k "ctrl + alt + cmd - 8"
# # cmd + ctrl - 9 : yabai -m space --focus  9 || skhd -k "ctrl + alt + cmd - 9"
# # cmd + ctrl - 0 : yabai -m space --focus 10 || skhd -k "ctrl + alt + cmd - 0"

# # send window to desktop and follow focus
# # shift + cmd - x : yabai -m window --space recent && yabai -m space --focus recent
# # shift + cmd - z : yabai -m window --space prev && yabai -m space --focus prev
# # shift + cmd - c : yabai -m window --space next && yabai -m space --focus next
# # shift + cmd - 1 : yabai -m window --space  1 && yabai -m space --focus 1
# # shift + cmd - 2 : yabai -m window --space  2 && yabai -m space --focus 2
# # shift + cmd - 3 : yabai -m window --space  3 && yabai -m space --focus 3
# # shift + cmd - 4 : yabai -m window --space  4 && yabai -m space --focus 4
# # shift + cmd - 5 : yabai -m window --space  5 && yabai -m space --focus 5
# # shift + cmd - 6 : yabai -m window --space  6 && yabai -m space --focus 6
# # shift + cmd - 7 : yabai -m window --space  7 && yabai -m space --focus 7
# # shift + cmd - 8 : yabai -m window --space  8 && yabai -m space --focus 8
# # shift + cmd - 9 : yabai -m window --space  9 && yabai -m space --focus 9
# # shift + cmd - 0 : yabai -m window --space 10 && yabai -m space --focus 10

# # focus monitor
# # ctrl + alt - x  : yabai -m display --focus recent
# # ctrl + alt - z  : yabai -m display --focus prev
# # ctrl + alt - c  : yabai -m display --focus next
# # ctrl + alt - 1  : yabai -m display --focus 1
# # ctrl + alt - 2  : yabai -m display --focus 2
# # ctrl + alt - 3  : yabai -m display --focus 3

# # send window to monitor and follow focus
# # ctrl + cmd - x  : yabai -m window --display recent && yabai -m display --focus recent
# # ctrl + cmd - z  : yabai -m window --display prev && yabai -m display --focus prev
# # ctrl + cmd - c  : yabai -m window --display next && yabai -m display --focus next
# # ctrl + cmd - 1  : yabai -m window --display 1 && yabai -m display --focus 1
# # ctrl + cmd - 2  : yabai -m window --display 2 && yabai -m display --focus 2
# # ctrl + cmd - 3  : yabai -m window --display 3 && yabai -m display --focus 3

# # move window
# # shift + ctrl - a : yabai -m window --move rel:-20:0
# # shift + ctrl - s : yabai -m window --move rel:0:20
# # shift + ctrl - w : yabai -m window --move rel:0:-20
# # shift + ctrl - d : yabai -m window --move rel:20:0

# # increase window size
# # shift + alt - a : yabai -m window --resize left:-20:0
# # shift + alt - s : yabai -m window --resize bottom:0:20
# # shift + alt - w : yabai -m window --resize top:0:-20
# # shift + alt - d : yabai -m window --resize right:20:0

# # decrease window size
# # shift + cmd - a : yabai -m window --resize left:20:0
# # shift + cmd - s : yabai -m window --resize bottom:0:-20
# # shift + cmd - w : yabai -m window --resize top:0:20
# # shift + cmd - d : yabai -m window --resize right:-20:0

# # set insertion point in focused container
# # ctrl + alt - h : yabai -m window --insert west
# # ctrl + alt - j : yabai -m window --insert south
# # ctrl + alt - k : yabai -m window --insert north
# # ctrl + alt - l : yabai -m window --insert east
# # ctrl + alt - i : yabai -m window --insert stack

# # # rotate tree
# # alt - r : yabai -m space --rotate 90

# # # mirror tree y-axis
# # alt - y : yabai -m space --mirror y-axis

# # # mirror tree x-axis
# # alt - x : yabai -m space --mirror x-axis

# # # toggle desktop offset
# # alt - a : yabai -m space --toggle padding && yabai -m space --toggle gap

# # # toggle window parent zoom
# # alt - d : yabai -m window --toggle zoom-parent

# # # toggle window fullscreen zoom
# # alt - f : yabai -m window --toggle zoom-fullscreen

# # # toggle window native fullscreen
# # shift + alt - f : yabai -m window --toggle native-fullscreen

# # # toggle window split type
# # # alt - e : yabai -m window --toggle split

# # # float / unfloat window and restore position
# # # alt - t : yabai -m window --toggle float && /tmp/yabai-restore/$(yabai -m query --windows --window | jq -re '.id').restore 2>/dev/null || true
# # alt - t : yabai -m window --toggle float && yabai -m window --grid 4:4:1:1:2:2

# # # toggle sticky (show on all spaces)
# # alt - s : yabai -m window --toggle sticky

# # # toggle topmost (keep above other windows)
# # alt - o : yabai -m window --toggle topmost

# # # toggle picture-in-picture
# # alt - p : yabai -m window --toggle border && \
# #           yabai -m window --toggle pip

# # change layout of desktop
# # ctrl + alt - a : yabai -m space --layout bsp
# # ctrl + alt - d : yabai -m space --layout float
# # ctrl + alt - s : yabai -m space --layout $(yabai -m query --spaces --space | jq -r 'if .type == "bsp" then "float" else "bsp" end')

# ========================================================


# # open terminal
# # cmd - return : open -na alacritty.app
# # cmd + shift - return : urxvt

# # focus window
# #alt - x : yabai -m window --focus recent
# cmd - h : yabai -m window --focus west
# cmd - j : yabai -m window --focus south
# cmd - k : yabai -m window --focus north
# cmd - l : yabai -m window --focus east
# cmd - s : yabai -m window --focus stack.prev
# cmd - n : yabai -m window --focus stack.next

# # swap window
# #ctrl + alt - x : yabai -m window --swap recent
# shift + cmd - h : yabai -m window --swap west
# shift + cmd - j : yabai -m window --swap south
# shift + cmd - k : yabai -m window --swap north
# shift + cmd - l : yabai -m window --swap east

# # move window
# alt + cmd - h : yabai -m window --move rel:-20:0
# alt + cmd - j : yabai -m window --move rel:0:20
# alt + cmd - k : yabai -m window --move rel:0:-20
# alt + cmd - l : yabai -m window --move rel:20:0

# # balance size of windows
# cmd + alt - 0 : yabai -m space --balance


# # destroy desktop
# cmd + alt - w : yabai -m space --destroy

# # Move focus container to workspace
# cmd - z : yabai -m space --focus prev
# cmd - x : yabai -m space --focus next
# cmd - 1 : yabai -m space --focus 1
# cmd - 2 : yabai -m space --focus 2
# cmd - 3 : yabai -m space --focus 3
# cmd - 4 : yabai -m space --focus 4
# cmd - 5 : yabai -m space --focus 5
# cmd - 6 : yabai -m space --focus 6
# cmd - 7 : yabai -m space --focus 7
# cmd - 8 : yabai -m space --focus 8
# cmd - 9 : yabai -m space --focus 9

# # focus monitor
# ctrl + shift - p  : yabai -m display --focus prev
# ctrl + shift - o  : yabai -m display --focus next
# #ctrl + shift - 1  : yabai -m display --focus 1
# #ctrl + shift - 2  : yabai -m display --focus 2

# # move window
# #shift + ctrl - a : yabai -m window --move rel:-20:0
# #shift + ctrl - s : yabai -m window --move rel:0:20
# #shift + ctrl - w : yabai -m window --move rel:0:-20
# #shift + ctrl - d : yabai -m window --move rel:20:0

# # increase window size
# ctrl + alt - left : yabai -m window --resize left:-20:0
# ctrl + alt - down : yabai -m window --resize bottom:0:20
# ctrl + alt - up : yabai -m window --resize top:0:-20
# ctrl + alt - right : yabai -m window --resize right:20:0

# # decrease window size
# shift + cmd - left : yabai -m window --resize left:20:0
# shift + cmd - down : yabai -m window --resize bottom:0:-20
# shift + cmd - up : yabai -m window --resize top:0:20
# shift + cmd - right : yabai -m window --resize right:-20:0

# # rotate tree
# alt - r : yabai -m space --rotate 90

# # mirror tree y-axis
# alt - y : yabai -m space --mirror y-axis

# # mirror tree x-axis
# alt - x : yabai -m space --mirror x-axis

# # toggle window native fullscreen
# ctrl + alt - f : yabai -m window --toggle zoom-fullscreen

# # change layout of desktop
# ctrl + alt - b : yabai -m space --layout bsp
# ctrl + alt - s : yabai -m space --layout stack
# ctrl + alt - d : yabai -m space --layout float

# # opens iTerm2
# cmd - return : "${HOME}"/bin/open-iterm2.sh
# cmd - b : open -na "Brave Browser" --args --new-window

# ctrl + shift - q : yabai -m window --close

# ctrl + alt - a : osascript -e 'tell application "System Events" to tell every desktop to set picture to "/Users/scott/Downloads/yellow_red_blue.png" as POSIX file'
# ctrl + alt - i : osascript -e 'tell application "System Events" to tell every desktop to set picture to "/Users/scott/Downloads/IMG_0915.jpeg" as POSIX file'
# ctrl + alt - w : osascript -e 'tell application "System Events" to tell every desktop to set picture to "/Users/scott/Downloads/5Zv7d0.jpeg" as POSIX file'





# -------------


# # vim:ft=sh:
# # open terminal
# cmd - return : /Applications/Kitty.app/Contents/MacOS/kitty --single-instance -d ~ &> /dev/null

# # open mpv with url from clipboard
# cmd - m : open -na /Applications/mpv.app $(pbpaste)

# # focus window
# alt - x : yabai -m window --focus recent
# alt - h : yabai -m window --focus west
# alt - j : yabai -m window --focus south
# alt - k : yabai -m window --focus north
# alt - l : yabai -m window --focus east

# # swap window
# shift + alt - x : yabai -m window --swap recent
# shift + alt - h : yabai -m window --swap west
# shift + alt - j : yabai -m window --swap south
# shift + alt - k : yabai -m window --swap north
# shift + alt - l : yabai -m window --swap east

# # move window
# shift + cmd - h : yabai -m window --warp west
# shift + cmd - j : yabai -m window --warp south
# shift + cmd - k : yabai -m window --warp north
# shift + cmd - l : yabai -m window --warp east

# # balance size of windows
# shift + alt - 0 : yabai -m space --balance

# # make floating window fill screen
# shift + alt - up     : yabai -m window --grid 1:1:0:0:1:1

# # make floating window fill left-half of screen
# shift + alt - left   : yabai -m window --grid 1:2:0:0:1:1

# # make floating window fill right-half of screen
# shift + alt - right  : yabai -m window --grid 1:2:1:0:1:1


# # destroy desktop
# cmd + alt - w : yabai -m space --destroy

# # fast focus desktop
# cmd + alt - x : yabai -m space --focus recent
# cmd + alt - z : yabai -m space --focus prev || skhd -k "ctrl + alt + cmd - z"
# cmd + alt - c : yabai -m space --focus next || skhd -k "ctrl + alt + cmd - c"
# cmd + alt - 1 : yabai -m space --focus  1 || skhd -k "ctrl + alt + cmd - 1"
# cmd + alt - 2 : yabai -m space --focus  2 || skhd -k "ctrl + alt + cmd - 2"
# cmd + alt - 3 : yabai -m space --focus  3 || skhd -k "ctrl + alt + cmd - 3"
# cmd + alt - 4 : yabai -m space --focus  4 || skhd -k "ctrl + alt + cmd - 4"
# cmd + alt - 5 : yabai -m space --focus  5 || skhd -k "ctrl + alt + cmd - 5"
# cmd + alt - 6 : yabai -m space --focus  6 || skhd -k "ctrl + alt + cmd - 6"
# cmd + alt - 7 : yabai -m space --focus  7 || skhd -k "ctrl + alt + cmd - 7"
# cmd + alt - 8 : yabai -m space --focus  8 || skhd -k "ctrl + alt + cmd - 8"
# cmd + alt - 9 : yabai -m space --focus  9 || skhd -k "ctrl + alt + cmd - 9"
# cmd + alt - 0 : yabai -m space --focus 10 || skhd -k "ctrl + alt + cmd - 0"

# # send window to desktop and follow focus
# shift + cmd - x : yabai -m window --space recent && yabai -m space --focus recent
# shift + cmd - z : yabai -m window --space prev && yabai -m space --focus prev
# shift + cmd - c : yabai -m window --space next && yabai -m space --focus next
# shift + cmd - 1 : yabai -m window --space  1 && yabai -m space --focus 1
# shift + cmd - 2 : yabai -m window --space  2 && yabai -m space --focus 2
# shift + cmd - 3 : yabai -m window --space  3 && yabai -m space --focus 3
# shift + cmd - 4 : yabai -m window --space  4 && yabai -m space --focus 4
# shift + cmd - 5 : yabai -m window --space  5 && yabai -m space --focus 5
# shift + cmd - 6 : yabai -m window --space  6 && yabai -m space --focus 6
# shift + cmd - 7 : yabai -m window --space  7 && yabai -m space --focus 7
# shift + cmd - 8 : yabai -m window --space  8 && yabai -m space --focus 8
# shift + cmd - 9 : yabai -m window --space  9 && yabai -m space --focus 9
# shift + cmd - 0 : yabai -m window --space 10 && yabai -m space --focus 10

# # focus monitor
# ctrl + alt - x  : yabai -m display --focus recent
# ctrl + alt - z  : yabai -m display --focus prev
# ctrl + alt - c  : yabai -m display --focus next
# ctrl + alt - 1  : yabai -m display --focus 1
# ctrl + alt - 2  : yabai -m display --focus 2
# ctrl + alt - 3  : yabai -m display --focus 3

# # send window to monitor and follow focus
# ctrl + cmd - x  : yabai -m window --display recent && yabai -m display --focus recent
# ctrl + cmd - z  : yabai -m window --display prev && yabai -m display --focus prev
# ctrl + cmd - c  : yabai -m window --display next && yabai -m display --focus next
# ctrl + cmd - 1  : yabai -m window --display 1 && yabai -m display --focus 1
# ctrl + cmd - 2  : yabai -m window --display 2 && yabai -m display --focus 2
# ctrl + cmd - 3  : yabai -m window --display 3 && yabai -m display --focus 3

# # move window
# shift + ctrl - a : yabai -m window --move rel:-20:0
# shift + ctrl - s : yabai -m window --move rel:0:20
# shift + ctrl - w : yabai -m window --move rel:0:-20
# shift + ctrl - d : yabai -m window --move rel:20:0

# # increase window size
# shift + alt - a : yabai -m window --resize left:-20:0
# shift + alt - s : yabai -m window --resize bottom:0:20
# shift + alt - w : yabai -m window --resize top:0:-20
# shift + alt - d : yabai -m window --resize right:20:0

# # decrease window size
# shift + cmd - a : yabai -m window --resize left:20:0
# shift + cmd - s : yabai -m window --resize bottom:0:-20
# shift + cmd - w : yabai -m window --resize top:0:20
# shift + cmd - d : yabai -m window --resize right:-20:0

# # set insertion point in focused container
# ctrl + alt - h : yabai -m window --insert west
# ctrl + alt - j : yabai -m window --insert south
# ctrl + alt - k : yabai -m window --insert north
# ctrl + alt - l : yabai -m window --insert east
# ctrl + alt - i : yabai -m window --insert stack

# # rotate tree
# alt - r : yabai -m space --rotate 90

# # mirror tree y-axis
# alt - y : yabai -m space --mirror y-axis

# # mirror tree x-axis
# alt - x : yabai -m space --mirror x-axis

# # toggle window parent zoom
# alt - d : yabai -m window --toggle zoom-parent

# # toggle window fullscreen zoom
# alt - f : yabai -m window --toggle zoom-fullscreen

# # toggle window native fullscreen
# shift + alt - f : yabai -m window --toggle native-fullscreen

# # toggle window split type
# # alt - e : yabai -m window --toggle split

# # toggle sticky (show on all spaces)
# alt - s : yabai -m window --toggle sticky

# # toggle topmost (keep above other windows)
# alt - o : yabai -m window --toggle topmost

