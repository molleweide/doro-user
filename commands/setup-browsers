#!/usr/bin/env bash


# NOTE: a lot of things are sync across browsers via Browser-Sync.
# This means that I most likely only have to automate installing
# local extensions, eg Surfingkeys.


# NOTE: interesting command for launching chromium/brave/chrome on mac
# open -a chromium --args --load-extension=$PWD/build --force-dev-mode-highlighting --no-default-browser-check
#
# --load-extension=comma/separated/list/of/paths/to/extensions


function setup_browsers() (
	source "$DOROTHY/sources/bash.bash"

	# # improve performance
	# if is-needle --quiet "setup-browsers" && ! is-needle --upgrade "setup-browsers" && ! is-needle --uninstall "setup-browsers" && command-exists {REPLACE_ME}; then
	#   return 0
	# fi

	# TODO: TERMINAL BASED BROWSERS
	# https://itsfoss.com/terminal-web-browsers/

	# TODO: INSTALL NYXT
	# https://github.com/atlas-engineer/nyxt

	# TODO: INSTALL QUTE
	# https://github.com/qutebrowser/qutebrowser

	# TODO: VIMB
	# https://github.com/fanglingsu/vimb

  # TODO: SAFARI

  # TODO: FIREFOX
  # https://wiki.mozilla.org/Firefox/CommandLineOptions

  # TODO: VIVALDI

  # TODO: CHROMIUM
  #
  # NOTE: how to save websites to desktop, preferably with bash/code
  # https://askubuntu.com/questions/910494/run-chrome-webpage-as-desktop-application

  ### IN CHROME
  # https://peter.sh/experiments/chromium-command-line-switches/

  ### IN BRAVE
  # https://support.brave.com/hc/en-us/articles/360044860011-How-Do-I-Use-Command-Line-Flags-in-Brave-

  ## SAVE WEB APPS TO DESKTOP

)

# Fire if invoked standalone
if test "$0" = "${BASH_SOURCE[0]}"; then
	setup_browsers "$@"
fi
