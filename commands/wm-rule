#!/usr/bin/env bash

 # TODO: rule selection | yabai -m rule --remove <RULE_SEL>       Remove an existing rule with the given index or label.

# @param command
# @param [ add_arg1 | add_arg2 | ... | add_argN ] OR [ rm_rule ]
test -z "${1-}" && exit 1
cmd=$1
if is-mac; then
    ypre="yabai -m rule"
    rules=()
    if test "$cmd" = "add" -o "$cmd" = "a"; then
        yabai_cmd="add"
        for i in ${fn_args:3}; do # NOTE: why wrapping fn_args in string doesn't work?
            local rule_name=${i%=*}
            local rule_parm=${i#*=}
	        case "$rule_name" in
	            "label" | "l")   rules+=("label=\"$rule_parm\"");; # Label used to identify the rule with a unique name
	            "app" | "a")     rules+=("app=\"$rule_parm\"") ;; # app[!]=<REGEX>
	            "title" | "t")   rules+=("title=\"$rule_parm\"");; # title[!]=<REGEX>
	            "display" | "d") rules+=("display=\"$rule_parm\"");; # display=[^]<DISPLAY_SEL>
	            "space" | "s")   rules+=("space=\"$rule_parm\"");; # space=[^]<SPACE_SEL>
	            "manage" | "mg") rules+=("manage=\"$rule_parm\"");; # manage=<BOOL_SEL>
	            "sticky" | "st") rules+=("sticky=\"$rule_parm\"");; # sticky=<BOOL_SEL>
	            "msff")          rules+=("mouse_follows_focus=\"$rule_parm\"");; # mouse_follows_focus=<BOOL_SEL>
	            "layer" | "ly")  rules+=("layer=\"$rule_parm\"");; # layer=<LAYER>
	            "opacity" | "o") rules+=("opacity=\"$rule_parm\"");; # opacity=<FLOAT_SEL>
	            "border" | "b")  rules+=("border=\"$rule_parm\"");; # border=<BOOL_SEL>
	            "nf")            rules+=("native-fullscreen=\"$rule_parm\"");; # native-fullscreen=<BOOL_SEL>
	            "grid" | "g")    rules+=("grid=\"$rule_parm\"");; # grid=<rows>:<cols>:<start-x>:<start-y>:<width>:<height>
	            *) echo "NO_MATCH";;
	        esac
        done
	    echo "$ypre --$yabai_cmd ${rules[@]}"
	elif test "$cmd" = 'remove' -o "$cmd" = 'rm'; then
        echo "$ypre --remove"
	elif test "$cmd" = 'list' -o "$cmd" = 'ls'; then
        echo "$ypre --list"
	fi
else
    echo "linux todo..."
fi
