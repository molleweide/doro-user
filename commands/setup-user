#!/usr/bin/env bash
# source "$DOROTHY/sources/strict.bash"

# NOTE: ORDER of install
# ~ dorothy
# ~ symlink user configs
# ~ make sure GHQ_ROOT exists
# ~ clone GHQ
# ~ strongbox?

# TODO: rewrite this file to follow the dorothy installer conventions

# TEST: what is the difference btw export vars from environment.bash or
# source/some_script?

DORO_USER_XDG="$DOROTHY/user/config.xdg"
GHQ_ROOT=$(ghq root)
GHQ_ROOT_GH_USER="$GHQ_ROOT/github.com/molleweide"

function pull_molleweide_latest() {
	pushd $DOROTHY/user >/dev/null 2>&1
	echo "doro user pwd: $PWD"
	popd >/dev/null 2>&1
}

# I can't keep my xdg configs inside of GHQ because GHQ depends on my XDG
# configs to know where to install all my repos. therefore simple configs
# should be kept here in the doro user dir.
function setup_basic_xdg_config_symlinks() {
	echo-header "SETTING UP DORO USR XDG SYMLINKS..."
	for f in "$DORO_USER_XDG"/*; do
		if test "$(basename "$f")" = "_"; then
			continue
		fi
		symlink-helper --existing="$f" --symlink="$XDG_CONFIG_HOME/$(basename "$f")"
	done
}

function setup_doom_neovim_config() {
	echo-header "SETTING UP NEOVIM..."
	# doom_nvim_dir="$HOME/code/doom-nvim"
	# if [ ! -d "$HOME/code/doom-nvim" ]; then
	# 	git clone git@github.com:molleweide/doom-nvim.git "$doom_nvim_dir"
	# fi
	# local doom_path="$GHQ_ROOT_GH_USER/doom-nvim"
	# echo "$doom_path"
	symlink-helper --existing="$GHQ_ROOT_GH_USER/doom-nvim" --symlink="$XDG_CONFIG_HOME/nvim"
}

# FIX: create `setup-util-tmux` for tmux
#       look at syncthing, to see how uninstalling is done.
function setup_tmux_user() {
	echo-header "SETTING UP TMUX..."
	# https://github.com/tmux-plugins/tmux-urlview
	# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
	# https://github.com/sigpipe/urlview
	TMUX_PLUG_DIR="$HOME/.config/tmux/plugins/tpm"
	[ ! -d $TMUX_PLUG_DIR ] && git clone git@github.com:tmux-plugins/tpm.git $TMUX_PLUG_DIR
	install_script="$TMUX_PLUG_DIR/bin/install_plugins"
	if [ -x "$install_script" ]; then
		$install_script
	fi
}

function setup_neorg_notes() {
	if [ ! -d "$HOME/neorg" ]; then
		git clone git@github.com:molleweide/neorg_user.git "$HOME/neorg"
	fi
}

function setup_osx() {
	# setup-user-osx
	:
}

# FIX: setup-hammerspoon. it makes sense to have everything in a setup script
function setup_hammerspoon() {
	if is-mac; then
		HAMMERSPOON_CONFIG_DIR="$HOME/code/config_hammerspoon"

		if [ ! -d "$HOME/code/config_hammerspoon" ]; then
			git clone git@github.com:molleweide/config_hammerspoon.git "$HAMMERSPOON_CONFIG_DIR"
		fi

		github.com/molleweide/config_hammerspoon

		echo-style --h1="Setting up HAMMERSPOON.."

		# brew install --cask hammerspoon # --appdir=/Applications

		url="https://github.com/Hammerspoon/Spoons/raw/master/Spoons/SpoonInstall.spoon.zip"
		destination=/tmp/SpoonInstall.spoon.zip
		spoons_dir=$HOME/.config/hammerspoon/Spoons

		if [ ! -d "$spoons_dir/SpoonInstall.spoon" ]; then
			wget -nv $url -O $destination && unzip -d "$spoons_dir" "$destination"
		fi

		defaults write org.hammerspoon.Hammerspoon MJConfigFile "~/.config/hammerspoon/init.lua"

		# fix: how should I manage the hammerspoon config
		symlink-helper --existing="$doom_nvim_dir" --symlink="$XDG_CONFIG_HOME/nvim"
		symlink-file "$ghq_user/config_hammerspoon" "$XDG_CONFIG_HOME/hammerspoon"

		:
	fi
}

function setup_keyboard() {
	:
}

function setup_obs() {
	# ~/Library/Application Support/obs-studio/
	# ~/.config/obs-studio/
	:
}

# RUN TASKS.........

# pull_molleweide_latest
# setup_basic_xdg_config_symlinks
# setup_doom_neovim_config
# setup_tmux_user
# setup_neorg_notes
# setup_osx
