#!/usr/bin/env sh

# USER CONFIGS

# sudo yabai --load-sa

# -----------------------------------
# ---       global settings       ---
# -----------------------------------

wmc     fmsf    off
wmc     ffms    off
wmc     wp      second_child
wmc     wtm     off
wmc     ws      on
wmc     wop     on
wmc     wopd    0.0
wmc     waop    1.0
wmc     wnop    0.90
wmc     wb      off
wmc     wbw     12
wmc     wabc    0xff775759
wmc     wnbc    0xff555555
wmc     ifc     0xffd75f5f
wmc     sr      0.50
wmc     ab      off
wmc     msm     fn
wmc     ms1     move
wmc     ms2     resize

# ------------------------------------
# ---       general settings       ---
# ------------------------------------

wmc y    bsp
wmc pt    6
wmc pb    6
wmc pl    6
wmc pr    6
wmc gap   6
wmc bar   off # all:28:0

# ---------------------------------------------
# ---       spaces naming & behaviour       ---
# ---------------------------------------------

wms n web 1
wms n dev 2
wms n social 3
wmc y bsp 3
wms n misc 4

# ---------------------------
# ---       signals       ---
# ---------------------------

# # Refresh spaces widget on space change
# yabai -m signal --add event=space_changed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"
# # Refresh spaces widget on display focus change
# yabai -m signal --add event=display_changed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"
# # Refresh spaces widget on window resize
# yabai -m signal --add event=window_resized action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"
# # Refresh process widget on space change
# yabai -m signal --add event=space_changed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-process-jsx\"'"

# # Refresh process widget on when focused application changes
# yabai -m signal --add event=window_focused action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-process-jsx\"'"
# # Refresh spaces widget on when focused application changes
# yabai -m signal --add event=window_focused action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"

# # Refresh process widget on when focused application changes
# yabai -m signal --add event=application_front_switched action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-process-jsx\"'"
# # Refresh spaces widget on when focused application changes
# yabai -m signal --add event=application_front_switched action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"

# # Refresh process widget on when an application window is closed
# yabai -m signal --add event=window_destroyed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-process-jsx\"'"
# # Refresh spaces widget on when an application window is closed
# yabai -m signal --add event=window_destroyed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"

# # Refresh process widget when current window title changes
# yabai -m signal --add event=window_title_changed action="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh widget id \"simple-bar-process-jsx\"'"

# -------------------------
# ---       rules       ---
# -------------------------

# # apps not managed
wmr a n="sys_pref" t="sys_pref" a="Preferences$" mg=off
wmr a n="Finder" a="^Finder$" mg=off
# yabai -m rule --add label="App Store" app="^App Store$" manage=off
# yabai -m rule --add label="Activity Monitor" app="^Activity Monitor$" manage=off
# yabai -m rule --add label="Calculator" app="^Calculator$" manage=off
# yabai -m rule --add label="Dictionary" app="^Dictionary$" manage=off
# yabai -m rule --add label="mpv" app="^mpv$" manage=off
# yabai -m rule --add label="The Unarchiver" app="^The Unarchiver$" manage=off
# yabai -m rule --add label="Transmission" app="^Transmission$" manage=off
# yabai -m rule --add label="Colorpicker" app="^Colorpicker$" manage=off
# yabai -m rule --add label="iTerm2 settings" app="^iTerm2$" title="^Preferences" manage=off
# yabai -m rule --add label="Spark" app="^Spark$" title!="^Spark" manage=off
# yabai -m rule --add label="Hammerspoon" app="^Hammerspoon$" manage=off
# yabai -m rule --add label="SSH Tunnel Manager" app="^SSH Tunnel Manager$" manage=off
# yabai -m rule --add label="ImageOptim" app="^ImageOptim$" manage=off
# yabai -m rule --add label="AppCleaner" app="^AppCleaner$" manage=off
# yabai -m rule --add label="Pika" app="^Pika$" manage=off

# # apps special rules
# yabai -m rule --add label="iTerm2" app="^iTerm2$" manage=off
# yabai -m rule --add label="Google Chrome" app="^Google Chrome$" space=^1
# yabai -m rule --add label="Firefox" app="^Firefox$" space=^1
# yabai -m rule --add label="Code" app="^Code$" space=^2
# yabai -m rule --add label="Sequel Ace" app="^Sequel Ace" space=^2
# yabai -m rule --add label="Slack" app="^Slack$" space=^3
# yabai -m rule --add label="Skype" app="^Skype$" space=^3

# -------------------------
# ---       other       ---
# -------------------------

# configure to work with custom launcher under .local/bin

# todo: if string "" contains whitespace then check double quote start -> find next...
wmr a n="cust_launch" t='bin_custom_launcher' mg=off st=on y=above b=off

# kill any existing limelight process if one exists, before we launch a new one
killall limelight &>/dev/null
limelight &>/dev/null &

echo "yabai configuration loaded.."

