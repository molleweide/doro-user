#!/usr/bin/env bash

# echo "shell process id: " $$

# echo "\$0 vs BASH_SOURCE0: [$0] vs. [${BASH_SOURCE[0]}]"

# echo "${BASH_SOURCE%}"
# echo "${BASH_SOURCE%/*}"


# echo $options[login] $options[interactive]

# # echo ${(k)options}
# for k  in ${options[k]}; do echo $k; done

# echo "------"

# # https://stackoverflow.com/questions/3427872/whats-the-difference-between-and-in-bash

# t=3
# ([ $t == 3 ] && echo "AAA") || echo "poop"



# # create dynamic variables
# c=0
# for file in $( ls ); do
#     eval "var$c=$file";
#     c=$((c+1));
# done

# # set home/.config


# # source "${BASH_SOURCE%/*}/../../lib/_"

# # echo "with -type d"
# # echo
# # echo

# # find home/.config -maxdepth 1 -mindepth 1 -type d # -print '%f\n'

# echo "without -type d"
# echo
# echo

# find $HOME/.config -maxdepth 1 -mindepth 1 # -print '%f\n'

# arch=$(uname -m)
# if test "$arch" = 'aarch64' -o "$arch" = 'arm64'; then
# 	echo 'a64'  # raspberry pi, apple m1
# elif [[ "$arch" = x86_64* ]]; then
# 	if [[ "$(uname -a)" = *ARM64* ]]; then
# 		echo 'a64'  # apple m1 running via `arch -x86_64 /bin/bash -c "uname -m"`
# 	else
# 		echo 'x64'
# 	fi
# elif [[ "$arch" = i*86 ]]; then
# 	echo 'x32'
# elif [[ "$arch" = arm* ]]; then
# 	echo 'a32'
# else
# 	exit 1
# fi

