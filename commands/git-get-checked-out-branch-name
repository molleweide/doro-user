#!/usr/bin/env bash

# # current branch sed: (HEAD detached at upstream/tinker)
# # current branch abbr: HEAD
# # current branch: 060e509

# DETACHED
# * (HEAD detached at upstream/tinker)
#   master
#   moll-intel
#   molleweide
#   tmp

# if detached HEAD how get branch name
# echo "current branch abbr: ${current_branch_abbr}"
# echo

checked_out_branch_name=""
branch_name=""
branch_remote=""
current_ref_sha=$(git rev-parse --short HEAD)
detached="false"

branch_name=$(git rev-parse --abbrev-ref HEAD)

empty_if_detached=$( git symbolic-ref HEAD 2> /dev/null )
if test -z "$empty_if_detached"; then
    detached="true"

    # string holding branch name TODO: include dashes `-`
    detach_str=$(git branch | sed -n '/\* /s///p' | grep -o '[0-9A-Za-z]*/[0-9A-Za-z]*')
    detach_remote="${detach_str%\/*}"
    detach_branch="${detach_str#*\/}"
    branch_name=$detach_branch
    branch_remote=$detach_remote

    # echo "$branch_name | $branch_remote"

    test -z "$detach_branch" && branch_name="detached"
    test -z "$detach_remote" && branch_remote="detached"

    # will now be a SHA
    # ref_sha=$( git rev-parse --short HEAD 2> "/dev/null" | sed "s#refs/heads/##")
fi



# echo "DETACHED: $detached"
# echo "REMOTE: $remote "
# echo "BRANCH: $branch"
# echo "SHA: $current_ref_sha"
# echo "BRANCH NAME: ${branch_name}"

# echo $current_ref_sha $branch_name $branch_remote
echo $branch_name

