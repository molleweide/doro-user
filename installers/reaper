#!/usr/bin/env bash

source "${BASH_SOURCE%/*}/shared.sh"

REAPER_DIR=~/REAPER

function get_current_reaper_version() {

  rppv=$(brew info reaper | head -n 1)

  if [[ $rppv =~ [0-9]+\.[0-9]+\.[0-9]+ ]]; then
    rppv=${BASH_REMATCH[0]}
  else
    echo "Something is wrong with checking reaper version" >&2
    rppv="ERROR" # should use bool!!
  fi

  # return results
  echo  "reaper-$rppv"
}


function setup_necessary_dirs(){
    if [ ! -d $REAPER_DIR/projects ]; then
      mkdir -p $REAPER_DIR/projects
    fi
    if [ ! -d $REAPER_DIR/tmp ]; then
      mkdir -p $REAPER_DIR/tmp
    fi
    if [ ! -d $REAPER_DIR/backup ]; then
      mkdir -p $REAPER_DIR/backup
    fi
}


function install_reaper_linux() {
  echo "reaper linux install not done yet."
}

function mac_installer() {
  tmp_dir=$REAPER_DIR/git_clone_helper

  original="REAPER64.app"

  mkdir -p $1

  # 1. install reaper to target dir and rename to latest version
  brew install --cask reaper --appdir=$1 --force
  $(mv $1/$original "$1/$2.app")

  # 2. clone git to tmp dir and move it to reaper
  # TODO stack running sudmodules in script not working???
  # --recurse-submodules # doesn't seem to be working now?! it did before...
  git clone https://github.com/molleweide/reaper-app-config.git $tmp_dir
  mv $tmp_dir/.git $1/.git
  rm -r $tmp_dir # be careful

  # 3. NAVIGATE TO (pushd/popd) REAPER INSTALL DIR AND RESTORE GIT
  pushd $1 > /dev/null 2>&1
  echo "inside: $PWD ; now we git reset to get all files back."

  # :: RPP CONFIGS  ::
  # checkout my prefered CONFIG branch here
  git checkout laptopMain
  git reset --hard HEAD
  git submodule update --init --recursive

  # :: GIT SUBMODULES ::
  #
  # 1. SCRIPTS
  cd Scripts/reaper-keys
  git checkout molleweide
  cd ../..

  # 2. JSFX
  cd Effects/molleweide
  git checkout molleweide
  cd ../..

  # 3. theme


  popd > /dev/null 2>&1
  dotsay "after popd: $PWD"
}

# are user if they want to install reaper
# get latest version number > pass to insaller
function install_reaper_mac() {

  read -r -p "Do you want to install portable Cockos Reaper to $REAPER_DIR/app? [y|N] " response

  if [[ $response =~ (y|yes|Y) ]]; then

    rpp_latest=$(get_current_reaper_version)
    REAPER_INSTALL_DIR="$REAPER_DIR/app/$rpp_latest"

    if [ ! -d $REAPER_INSTALL_DIR ]; then

      dotsay "Installing latest version to $REAPER_INSTALL_DIR"
      mac_installer $REAPER_INSTALL_DIR $rpp_latest

    else

      dotsay ">>> Latest version of reaper is installed to $REAPER_INSTALL_DIR"

    fi
  fi

  setup_necessary_dirs
}

function install_reaper() {
  if is_macos; then
    install_reaper_mac
  else
    install_reaper_linux
  fi
}

install_reaper
