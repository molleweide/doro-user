#!/usr/bin/env ruby

require 'json'

category_ids = [
  "80c23103-eb48-4f35-be35-a09363997659", # cafes
  "b1af1c74-d68c-4e8e-b7cb-9bd78d5a90fa", # restaurants
]

COLOR_CODES = {
  black: 30,
  blue: 34,
  brown: 33,
  cyan: 36,
  dark_gray: 90,
  green: 32,
  light_blue: 94,
  light_cyan: 96,
  light_gray: 37,
  light_green: 92,
  light_purple: 95,
  light_red: 91,
  light_yellow: 93,
  purple: 35,
  red: 31,
  white: 97,
  yellow: 33
}

def colorize(color, string)
  "\e[#{COLOR_CODES[color]}m#{string}\e[0m"
end

def get_category(id)
  cmd = "#{ENV['HOME']}/.local/bin/ynab"
  output = `#{cmd} get category --id #{id} --output=json`.strip
  json = output.split("\n")[1..-1].join("\n")
  category = JSON.parse(json)['category']

  {
    name: category['name'],
    budgeted: category['budgeted'].to_i / 1000.0,
    activity: category['activity'].to_i / 1000.0,
    balance: category['balance'].to_i / 1000.0
  }
end

def progress_bar(percentage, inside_label, width = 30)
  char = 'â–ˆ'
  filled_count = (width * percentage).floor
  empty_count = width - filled_count

  chars = []
  filled_count.times { chars << colorize(:cyan, char) }
  empty_count.times { chars << " " }

  "|#{chars.join('')}|"
end

categories = category_ids.map { |id| get_category(id) }
max_length = categories.map { |category| category[:name].size }.max

lines = categories.map do |category|
  spent = category[:activity].abs
  percentage = spent / category[:budgeted]

  name = category[:name]
  name = name.ljust(max_length + 1) unless name.size == max_length

  [
    colorize(:white, name),
    colorize(:light_yellow, "$#{sprintf("%.2f", spent).ljust(7)}"),
    progress_bar(percentage, ''),
    colorize(:light_green, "$#{sprintf("%.2f", category[:budgeted]).ljust(7)}")
  ].join(' ')
end

puts colorize(:light_purple, "Current Budget")
puts "----------------------------------"
lines.each { |line| puts line }
